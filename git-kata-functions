#!/usr/bin/env zsh

number=
root=
upstream=

function switch_branch() {
  local exists=`git show-ref refs/heads/$1`
  if [ ! -n "$exists" ]; then
      git branch $1
      echo "New $1 branch created"
  fi
  git checkout $1
}

function commit() {
    sleep 1
    echo "$2" >> $1
    git add $1
    git commit -m $2
}

function initial_commit() {
    echo "initial commit" >> file
    git add file
    git commit -m "initial commit"
}

function display_log() {
    log "$root/repo/user_$1.git"
}


function display_log_upstream() {
    cd "$root/server/upstream.git"
    echo "Upstream is ready for serving you for the kata"
    log "$root/server/upstream.git"
}

function log() {
    echo ""
    git log --branches --remotes --tags --graph --pretty=format:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=iso
    echo ""
    echo "In order to go to repository, run this command: cd $1"
}

function setup() {
    DIRECTORY="git-kata-directory"

    if [ -d "$DIRECTORY" ]
    then
        rm -rf git-kata-directory/
        echo "$DIRECTORY folder exists. Deleted."
    fi
    mkdir -p "$DIRECTORY"
    echo "New $DIRECTORY folder created"

    cd "$DIRECTORY"
    root=$(pwd)

    create_upstream
}

function create_upstream() {
    mkdir -p "$root/server/upstream.git" > /dev/null 2>&1
    cd "$root/server/upstream.git"
    git init --bare > /dev/null 2>&1
    echo "Upstream repository created"
    upstream=true
}

function switch_user() {
    if [ ! -d "$root/repo/user_$1.git" ]
    then
        mkdir -p "$root/repo/user_$1.git"
        cd "$root/repo/user_$1.git"
        git init
        git config user.name "User ${1}"
        git config user.email "user_${1}@git.kata"
        if [ -n "$upstream" ]; then
            git remote add origin "file://$root/server/upstream.git"
        fi
    else
        cd "$root/repo/user_$1.git"
    fi
}
